"use strict";angular.module("nn.balanceChanger",["ui.bootstrap"]).run(["$templateCache",function(e){e.put("balance-changer/control.html",'\n\t\t<div class="balance-changer-control">\n\t\t\t<button class="btn btn-xs btn-danger" ng-click="$ctrl.open(\'withdraw\')" ng-if="$ctrl.model.buttons.w" title="{{ ::__(\'balanceChanger\', \'type.withdraw\') }}">-</button>\n\t\t\t<button class="btn btn-xs btn-success" ng-click="$ctrl.open(\'deposit\')" ng-if="$ctrl.model.buttons.d && !$ctrl.model.buttons.w" title="{{ ::__(\'balanceChanger\', \'type.deposit\') }}">+</button>\n\t\t\t<span>{{ $ctrl.model.subject.model[$ctrl.balanceField] | nnCurrency }}</span>\n\t\t\t<button class="btn btn-xs btn-success" ng-click="$ctrl.open(\'deposit\')" ng-if="$ctrl.model.buttons.d && $ctrl.model.buttons.w" title="{{ ::__(\'balanceChanger\', \'type.deposit\') }}">+</button>\n\t\t\t<button class="btn btn-xs" ng-click="$ctrl.open(\'ss\')" ng-if="$ctrl.model.buttons.ss && $root.Auth.cashier.can_move_sweepstakes" title="{{ ::__(\'balanceChanger\', \'type.sweepstakes\') }}">SS</button>\n\t\t</div>')}]).component("balanceChangerControl",{templateUrl:"balance-changer/control.html",bindings:{model:"="},controller:["$scope","$uibModal","Auth","Remote","Alert",function(e,n,o,t,a){var l=this.model;_.defaults(l,{method:"Cashier.BankGroup.Transaction.moveMoney",buttons:{w:1,d:1,ss:0},object:{type:"bankGroup"},ssDirection:"win2bet",bonus:null,balanceType:null}),l.subject.field?l.subject.field.basic?this.balanceField=l.subject.field.basic:this.balanceField=l.subject.field:this.balanceField="balance",l.balanceField=this.balanceField,this.open=function(e){o.agent?l.object.model=o.agent:"playerId"===l.subject.type?l.object.model=l.subject.model.bankGroup:"bankGroup"===l.subject.type&&(l.object.model=l.subject.model.parent),l.type=e,delete l.amount;var t="balanceChangerBasicComponent";"ss"===e?(t="balanceChangerSweepstakesComponent",l.type=l.ssDirection):"bonusBalance"!==l.balanceType&&"wagerCounter"!==l.balanceType||(t="balanceChangerBWComponent"),n.open({component:t,size:"sm",resolve:{model:l}})}}]}).component("balanceChangerBasicComponent",{templateUrl:VIEW_PATH+"/partials/balance-changer/modal-basic.html",bindings:{close:"&",dismiss:"&",resolve:"="},controller:["Remote","Alert",function(t,a){var e=this;_.extend(this,this.resolve);var l=this;l.ok=function(){if(l.model.amount<=0)return a.Big.Simple.Error("Amount has to be positive and greater than zero.");var e={amount:l.model.amount},n=null;switch(l.model.type){case"deposit":e.from=[l.model.object.type,objPath(l.model.object.model,"id")],e.to=[l.model.subject.type,objPath(l.model.subject.model,"id")],objPath(l.model,"bonus.id")&&(e.withDepositBonusId=l.model.bonus.id),n="toBalanceAfter";break;case"withdraw":e.from=[l.model.subject.type,objPath(l.model.subject.model,"id")],e.to=[l.model.object.type,objPath(l.model.object.model,"id")],n="fromBalanceAfter";break;default:return a.Big.Simple.Error("Undefined transaction type.")}l.model.subject;var o=l.model.balanceField;t.call("Cashier.BankGroup.Transaction.moveMoney",e).then(function(e){var t=objPath(e,n);void 0===t?a.Big.Simple.Error("Undefined balance field."):l.model.subject.model[o]=t,l.close()}).then(a.Small.Simple.Success,a.Big.Simple.Error)},l.cancel=function(){l.dismiss()},l.bonusValue=function(){var e=l.model.bonus,t=l.model.amount||0;return null!=e.bonus_sum?parseInt(t*e.bonus_percent/1e4):null!=e.bonus_percent?t*e.bonus_percent/1e4:(a.Big.Simple.Error("Bonus is broken."),0)},l.wagerValue=function(){var e=l.model.bonus,t=l.model.amount||0;return null!=e.bonus_sum?parseInt(t*e.bonus_percent/1e4):null!=e.bonus_percent?parseInt(t*e.bonus_percent/1e4)*e.wager_coefficient/1e4:(a.Big.Simple.Error("Bonus is broken."),0)},l.totalValue=function(){return(l.model.amount||0)+e.bonusValue()}}]}).component("balanceChangerSweepstakesComponent",{templateUrl:VIEW_PATH+"/partials/balance-changer/modal-sweepstakes.html",bindings:{close:"&",dismiss:"&",resolve:"="},controller:["Remote","Alert",function(t,o){_.extend(this,this.resolve);var a=this;a.ok=function(){if(a.model.amount<=0)return o.Big.Simple.Error("Amount has to be positive and greater than zero.");var e={amount:("bet2win"===a.model.type?-1:1)*a.model.amount,playerId:objPath(a.model.subject.model,"id")},n=a.model.subject;t.call("Cashier.Player.Balance.sweepstakesWin2Bet",e).then(function(t){n.field.ss?_.each(n.field.ss,function(e){n.model[e]=objPath(t,e)}):void 0!==n.model.balanceBet&&void 0!==n.model.balanceWin?(n.model.balanceBet=objPath(t,"balanceBet"),n.model.balanceWin=objPath(t,"balanceWin")):o.Big.Simple.Error("Unknown field. Nothing to update."),a.close()}).then(o.Small.Simple.Success,o.Big.Simple.Error)},a.cancel=function(){a.dismiss()}}]}).component("balanceChangerBWComponent",{templateUrl:VIEW_PATH+"/partials/balance-changer/modal-bw.html",bindings:{close:"&",dismiss:"&",resolve:"="},controller:["Remote","Alert",function(a,l){_.extend(this,this.resolve);var s=this;s.ok=function(){if(s.model.amount<=0)return l.Big.Simple.Error("Amount has to be positive and greater than zero.");var e={playerId:objPath(s.model.subject.model,"id"),wagerAmount:0,bonusAmount:0,bonusLimit:0,changeBalance:!1},t="deposit"===s.model.type?s.model.amount:-s.model.amount,n=null;switch(s.model.balanceType){case"bonusBalance":e.bonusAmount=t,n="bonusBalanceAfter";break;case"bonusLimit":e.bonusLimit=t,n="bonusLimitAfter";break;case"wagerCounter":e.wagerAmount=t,n="wagerCounterAfter";break;default:return l.Big.Simple.Error("Undefined balance type.")}s.model.subject;var o=s.model.balanceField;a.call("Cashier.Player.Bonus.Balance.change",e).then(function(e){var t=objPath(e,n);void 0===t?l.Big.Simple.Error("Undefined balance field."):s.model.subject.model[o]=t,s.close()}).then(l.Small.Simple.Success,l.Big.Simple.Error)},s.cancel=function(){s.dismiss()}}]});