"use strict";angular.module("nn.balanceChanger",["ui.bootstrap"]).run(["$templateCache",function(e){e.put("balance-changer/control.html",'\n\t\t<div class="balance-changer-control">\n\t\t\t<button class="btn btn-xs btn-danger" ng-click="$ctrl.open(\'withdraw\')" ng-if="$ctrl.model.buttons.w" title="{{ ::__(\'balanceChanger\', \'type.withdraw\') }}">-</button>\n\t\t\t<button class="btn btn-xs btn-success" ng-click="$ctrl.open(\'deposit\')" ng-if="$ctrl.model.buttons.d && !$ctrl.model.buttons.w" title="{{ ::__(\'balanceChanger\', \'type.deposit\') }}">+</button>\n\t\t\t<span>{{ $ctrl.model.subject.model[$ctrl.balanceField] | nnCurrency }}</span>\n\t\t\t<button class="btn btn-xs btn-success" ng-click="$ctrl.open(\'deposit\')" ng-if="$ctrl.model.buttons.d && $ctrl.model.buttons.w" title="{{ ::__(\'balanceChanger\', \'type.deposit\') }}">+</button>\n\t\t\t<button class="btn btn-xs" ng-click="$ctrl.open(\'ss\')" ng-if="$ctrl.model.buttons.ss && $root.Auth.cashier.can_move_sweepstakes" title="{{ ::__(\'balanceChanger\', \'type.sweepstakes\') }}">SS</button>\n\t\t</div>')}]).component("balanceChangerControl",{templateUrl:"balance-changer/control.html",bindings:{model:"="},controller:["$scope","$uibModal","Auth","Remote","Alert",function(e,t,o,n,l){var a=this.model;_.defaults(a,{method:"Cashier.BankGroup.Transaction.moveMoney",buttons:{w:1,d:1,ss:0},object:{type:"bankGroup"},ssDirection:"win2bet",bonus:null,balanceType:null}),a.subject.field?a.subject.field.basic?this.balanceField=a.subject.field.basic:this.balanceField=a.subject.field:this.balanceField="balance",a.balanceField=this.balanceField,this.open=function(e){o.agent?a.object.model=o.agent:"playerId"===a.subject.type?a.object.model=a.subject.model.bankGroup:"bankGroup"===a.subject.type&&(a.object.model=a.subject.model.parent),a.type=e,delete a.amount;var n="balanceChangerBasicComponent";"ss"===e?(n="balanceChangerSweepstakesComponent",a.type=a.ssDirection):"bonusBalance"!==a.balanceType&&"wagerCounter"!==a.balanceType||(n="balanceChangerBWComponent"),t.open({component:n,size:"sm",resolve:{model:a}})}}]}).component("balanceChangerBasicComponent",{templateUrl:VIEW_PATH+"/partials/balance-changer/modal-basic.html",bindings:{close:"&",dismiss:"&",resolve:"="},controller:["Remote","Alert",function(n,l){var e=this;_.extend(this,this.resolve);var a=this;a.processing=!1,a.ok=function(){if(_.isUndefined(a.model.amount)||a.model.amount<=0)return l.Big.Simple.Error("Amount has to be positive and greater than zero.");var e={amount:a.model.amount},t=null;switch(a.model.type){case"deposit":e.from=[a.model.object.type,objPath(a.model.object.model,"id")],e.to=[a.model.subject.type,objPath(a.model.subject.model,"id")],objPath(a.model,"bonus.id")&&(e.withDepositBonusId=a.model.bonus.id),t="toBalanceAfter";break;case"withdraw":e.from=[a.model.subject.type,objPath(a.model.subject.model,"id")],e.to=[a.model.object.type,objPath(a.model.object.model,"id")],t="fromBalanceAfter";break;default:return l.Big.Simple.Error("Undefined transaction type.")}a.model.subject;var o=a.model.balanceField;a.processing=!0,n.call("Cashier.BankGroup.Transaction.moveMoney",e).then(function(e){var n=objPath(e,t);void 0===n?l.Big.Simple.Error("Undefined balance field."):a.model.subject.model[o]=n,a.close()}).then(l.Small.Simple.Success,l.Big.Simple.Error).finally(function(){a.processing=!1})},a.cancel=function(){a.dismiss()},a.allMoney=function(e){e?(a.processing=!0,n.Cashier.Player.list({filter:{id:a.model.subject.model.id}}).then(function(e){1<e.count?l.Big.Simple.Warning("Something went wrong (Error code #2)"):a.model.amount=e.list[0].balance}).finally(function(){a.processing=!1})):a.model.amount=0},a.bonusValue=function(){var e=a.model.bonus,n=a.model.amount||0;return null!=e.bonus_sum?parseInt(n*e.bonus_percent/1e4):null!=e.bonus_percent?n*e.bonus_percent/1e4:(l.Big.Simple.Error("Bonus is broken."),0)},a.wagerValue=function(){var e=a.model.bonus,n=a.model.amount||0;return null!=e.bonus_sum?parseInt(n*e.bonus_percent/1e4):null!=e.bonus_percent?parseInt(n*e.bonus_percent/1e4)*e.wager_coefficient/1e4:(l.Big.Simple.Error("Bonus is broken."),0)},a.totalValue=function(){return(a.model.amount||0)+e.bonusValue()}}]}).component("balanceChangerSweepstakesComponent",{templateUrl:VIEW_PATH+"/partials/balance-changer/modal-sweepstakes.html",bindings:{close:"&",dismiss:"&",resolve:"="},controller:["Remote","Alert",function(n,o){_.extend(this,this.resolve);var l=this;l.processing=!1,l.ok=function(){if(_.isUndefined(l.model.amount)||l.model.amount<=0)return o.Big.Simple.Error("Amount has to be positive and greater than zero.");var e={amount:("bet2win"===l.model.type?-1:1)*l.model.amount,playerId:objPath(l.model.subject.model,"id")},t=l.model.subject;l.processing=!0,n.call("Cashier.Player.Balance.sweepstakesWin2Bet",e).then(function(n){t.field.ss?_.each(t.field.ss,function(e){t.model[e]=objPath(n,e)}):void 0!==t.model.balanceBet&&void 0!==t.model.balanceWin?(t.model.balanceBet=objPath(n,"balanceBet"),t.model.balanceWin=objPath(n,"balanceWin")):o.Big.Simple.Error("Unknown field. Nothing to update."),l.close()}).then(o.Small.Simple.Success,o.Big.Simple.Error).finally(function(){l.processing=!1})},l.cancel=function(){l.dismiss()}}]}).component("balanceChangerBWComponent",{templateUrl:VIEW_PATH+"/partials/balance-changer/modal-bw.html",bindings:{close:"&",dismiss:"&",resolve:"="},controller:["Remote","Alert",function(l,a){_.extend(this,this.resolve);var s=this;s.processing=!1,s.ok=function(){if(_.isUndefined(s.model.amount)||s.model.amount<=0)return a.Big.Simple.Error("Amount has to be positive and greater than zero.");var e={playerId:objPath(s.model.subject.model,"id"),wagerAmount:0,bonusAmount:0,changeBalance:!1},n="deposit"===s.model.type?s.model.amount:-s.model.amount,t=null;switch(s.model.balanceType){case"bonusBalance":e.bonusAmount=n,t="bonusBalanceAfter";break;case"wagerCounter":e.wagerAmount=n,t="wagerCounterAfter";break;default:return a.Big.Simple.Error("Undefined balance type.")}s.model.subject;var o=s.model.balanceField;s.processing=!0,l.call("Cashier.Player.Bonus.Balance.change",e).then(function(e){var n=objPath(e,t);void 0===n?a.Big.Simple.Error("Undefined balance field."):s.model.subject.model[o]=n,s.close()}).then(a.Small.Simple.Success,a.Big.Simple.Error).finally(function(){s.processing=!1})},s.cancel=function(){s.dismiss()}}]});