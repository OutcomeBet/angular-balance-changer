"use strict";angular.module("nn.balanceChanger",["ui.bootstrap"]).run(["$templateCache",function(e){e.put("balance-changer/control.html",'\n\t\t<div class="balance-changer-control">\n\t\t\t<button class="btn btn-xs btn-danger" ng-click="$ctrl.open(\'withdraw\')" ng-if="$ctrl.model.buttons.w" title="{{ ::__(\'balanceChanger\', \'type.withdraw\') }}">-</button>\n\t\t\t<button class="btn btn-xs btn-success" ng-click="$ctrl.open(\'deposit\')" ng-if="$ctrl.model.buttons.d && !$ctrl.model.buttons.w" title="{{ ::__(\'balanceChanger\', \'type.deposit\') }}">+</button>\n\t\t\t<span>{{ $ctrl.model.subject.model[$ctrl.balanceField] | nnCurrency }}</span>\n\t\t\t<button class="btn btn-xs btn-success" ng-click="$ctrl.open(\'deposit\')" ng-if="$ctrl.model.buttons.d && $ctrl.model.buttons.w" title="{{ ::__(\'balanceChanger\', \'type.deposit\') }}">+</button>\n\t\t\t<button class="btn btn-xs" ng-click="$ctrl.open(\'ss\')" ng-if="$ctrl.model.buttons.ss && $root.Auth.cashier.can_move_sweepstakes" title="{{ ::__(\'balanceChanger\', \'type.sweepstakes\') }}">SS</button>\n\t\t</div>')}]).component("balanceChangerControl",{templateUrl:"balance-changer/control.html",bindings:{model:"="},controller:["$scope","$uibModal","Auth","Remote","Alert",function(e,t,o,n,a){var l=this.model;_.defaults(l,{amount:0,method:"Cashier.BankGroup.Transaction.moveMoney",buttons:{w:1,d:1,ss:0},object:{type:"bankGroup"},ssDirection:"win2bet",bonus:null,balanceType:null}),l.subject.field?l.subject.field.basic?this.balanceField=l.subject.field.basic:this.balanceField=l.subject.field:this.balanceField="balance",l.balanceField=this.balanceField,this.open=function(e){o.agent?l.object.model=o.agent:"playerId"===l.subject.type?l.object.model=l.subject.model.bankGroup:"bankGroup"===l.subject.type&&(l.object.model=l.subject.model.parent),l.type=e,delete l.amount;var n="balanceChangerBasicComponent";"ss"===e?(n="balanceChangerSweepstakesComponent",l.type=l.ssDirection):"bonusBalance"!==l.balanceType&&"wagerCounter"!==l.balanceType||(n="balanceChangerBWComponent"),t.open({component:n,size:"sm",resolve:{model:l}})}}]}).component("balanceChangerBasicComponent",{templateUrl:VIEW_PATH+"/partials/balance-changer/modal-basic.html",bindings:{close:"&",dismiss:"&",resolve:"="},controller:["Remote","Alert",function(a,l){var o=this;_.extend(this,this.resolve);var s=this;s.processing=!0,s.validateBonus=function(){var e=objPath(s.model,"bonus.deposit_min"),n=objPath(s.model,"bonus.deposit_max"),t=s.model.amount;return e<=t&&t<=n},s.ok=function(){if(_.isUndefined(s.model.amount)||s.model.amount<=0)return l.Big.Simple.Error("Amount has to be positive and greater than zero.");var e={amount:s.model.amount},t=null;switch(s.model.type){case"deposit":e.from=[s.model.object.type,objPath(s.model.object.model,"id")],e.to=[s.model.subject.type,objPath(s.model.subject.model,"id")],objPath(s.model,"bonus.bonus_id")&&s.validateBonus()&&(e.bonusId=s.model.bonus.bonus_id),t="toBalanceAfter";break;case"withdraw":e.from=[s.model.subject.type,objPath(s.model.subject.model,"id")],e.to=[s.model.object.type,objPath(s.model.object.model,"id")],t="fromBalanceAfter";break;default:return l.Big.Simple.Error("Undefined transaction type.")}s.model.subject;var o=s.model.balanceField;s.processing=!0,a.call("Cashier.BankGroup.Transaction.moveMoney",e).then(function(e){var n=objPath(e,t);void 0===n?l.Big.Simple.Error("Undefined balance field."):s.model.subject.model[o]=n,s.close()}).then(l.Small.Simple.Success,l.Big.Simple.Error).finally(function(){s.processing=!1})},s.cancel=function(){s.dismiss()},s.allMoney=function(n){if("playerId"===o.model.subject.type){s.processing=!0;var e=o.model.subject.model.bank_group_id,t=o.model.subject.model.id;a.Cashier.Player.Balance.get({bankGroupId:e,playerId:t}).then(function(e){s.model.subject.balance={available:e.balance,activeBonus:e.active_bonus,wager:e.wager},n?s.model.amount=e.balance:angular.isNumber(s.model.amount)&&(s.model.amount=0)}).finally(function(){s.processing=!1})}else s.processing=!1},s.allMoney(!1),s.bonusValue=function(){var e=s.model.bonus,n=s.model.amount||0;return null!=e.bonus_sum?parseInt(n*e.bonus_percent/1e4):null!=e.bonus_percent?n*e.bonus_percent/1e4:(l.Big.Simple.Error("Bonus is broken."),0)},s.wagerValue=function(){var e=s.model.bonus,n=s.model.amount||0;return null!=e.bonus_sum?parseInt(n*e.bonus_percent/1e4):null!=e.bonus_percent?parseInt(n*e.bonus_percent/1e4)*e.wager_coefficient/1e4:(l.Big.Simple.Error("Bonus is broken."),0)},s.totalValue=function(){return(s.model.amount||0)+o.bonusValue()}}]}).component("balanceChangerSweepstakesComponent",{templateUrl:VIEW_PATH+"/partials/balance-changer/modal-sweepstakes.html",bindings:{close:"&",dismiss:"&",resolve:"="},controller:["Remote","Alert",function(n,o){_.extend(this,this.resolve);var a=this;a.processing=!1,a.ok=function(){if(_.isUndefined(a.model.amount)||a.model.amount<=0)return o.Big.Simple.Error("Amount has to be positive and greater than zero.");var e={amount:("bet2win"===a.model.type?-1:1)*a.model.amount,playerId:objPath(a.model.subject.model,"id")},t=a.model.subject;a.processing=!0,n.call("Cashier.Player.Balance.sweepstakesWin2Bet",e).then(function(n){t.field.ss?_.each(t.field.ss,function(e){t.model[e]=objPath(n,e)}):void 0!==t.model.balanceBet&&void 0!==t.model.balanceWin?(t.model.balanceBet=objPath(n,"balanceBet"),t.model.balanceWin=objPath(n,"balanceWin")):o.Big.Simple.Error("Unknown field. Nothing to update."),a.close()}).then(o.Small.Simple.Success,o.Big.Simple.Error).finally(function(){a.processing=!1})},a.cancel=function(){a.dismiss()}}]}).component("balanceChangerBWComponent",{templateUrl:VIEW_PATH+"/partials/balance-changer/modal-bw.html",bindings:{close:"&",dismiss:"&",resolve:"="},controller:["Remote","Alert",function(a,l){_.extend(this,this.resolve);var s=this;s.processing=!1,s.ok=function(){if(_.isUndefined(s.model.amount)||s.model.amount<=0)return l.Big.Simple.Error("Amount has to be positive and greater than zero.");var e={playerId:objPath(s.model.subject.model,"id"),wagerAmount:0,bonusAmount:0,changeBalance:!1},n="deposit"===s.model.type?s.model.amount:-s.model.amount,t=null;switch(s.model.balanceType){case"bonusBalance":e.bonusAmount=n,t="bonusBalanceAfter";break;case"wagerCounter":e.wagerAmount=n,t="wagerCounterAfter";break;default:return l.Big.Simple.Error("Undefined balance type.")}s.model.subject;var o=s.model.balanceField;s.processing=!0,a.call("Cashier.Player.Bonus.Balance.change",e).then(function(e){var n=objPath(e,t);void 0===n?l.Big.Simple.Error("Undefined balance field."):s.model.subject.model[o]=n,s.close()}).then(l.Small.Simple.Success,l.Big.Simple.Error).finally(function(){s.processing=!1})},s.cancel=function(){s.dismiss()}}]});