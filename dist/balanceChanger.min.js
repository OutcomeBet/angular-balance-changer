!function(){var e=angular.module("nn.balanceChanger",[]);e.factory("BalanceChanger",[function(){return{model:{},balanceField:"",method:"",methodPkField:"",type:null,amount:0}}]),e.directive("balanceChangerControl",["BalanceChanger",function(e){return{restrict:"E",require:"ngModel",replace:!0,template:'<div class="balance-changer-control"><button class="btn btn-xs btn-danger" ng-click="openModal($event, \'withdraw\')" title="{{ ::__(\'balanceChanger\', \'type.withdraw\') }}">-</button><span>{{ model[balanceField] | nnCurrency }}</span><button class="btn btn-xs btn-success" ng-click="openModal($event, \'deposit\')" title="{{ ::__(\'balanceChanger\', \'type.deposit\') }}">+</button></div>',link:function(n,a,l,t){n.model=null,n.balanceField=l.field||"balance";var o=e;t.$render=function(){n.model=t.$viewValue},n.openModal=function(e,a){o.model=n.model,o.balanceField=n.balanceField,o.method=l.method||"Cashier.Player.Balance.change",o.methodPkField=l.methodPkField||"playerId",o.type=a,o.amount=0,$("#balance-changer-modal").modal("toggle")}}}}]),e.directive("balanceChangerModal",["BalanceChanger","Remote",function(e,n){return{restrict:"C",link:function(a,l,t){var o=a.balanceChanger=e;a.save=function(){if(o.amount<=0)return void l.modal("toggle");var e=Math.abs(o.amount);"withdraw"===o.type&&(e=-e);var t={amount:e};t[o.methodPkField]=o.model.id,n.call(o.method,t).then(function(e){safeApply(a,function(){o.model[o.balanceField]=e.balanceAfter}),l.modal("toggle")})}}}}])}();